function $parcel$export(e,o,t,s){Object.defineProperty(e,o,{get:t,set:s,enumerable:!0,configurable:!0})}var $parcel$global="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},$parcel$modules={},$parcel$inits={},parcelRequire=$parcel$global.parcelRequiredf3e;null==parcelRequire&&(parcelRequire=function(e){if(e in $parcel$modules)return $parcel$modules[e].exports;if(e in $parcel$inits){var o=$parcel$inits[e];delete $parcel$inits[e];var t={id:e,exports:{}};return $parcel$modules[e]=t,o.call(t.exports,t,t.exports),t.exports}var s=new Error("Cannot find module '"+e+"'");throw s.code="MODULE_NOT_FOUND",s},parcelRequire.register=function(e,o){$parcel$inits[e]=o},$parcel$global.parcelRequiredf3e=parcelRequire),parcelRequire.register("3YhQm",(function(module,exports){var $4xklQ=parcelRequire("4xklQ"),$bsNDL=parcelRequire("bsNDL"),$7FzN9=parcelRequire("7FzN9"),$1M2iF=parcelRequire("1M2iF"),$kXIAH=parcelRequire("kXIAH"),$j0YSa=parcelRequire("j0YSa"),$dhcg3=parcelRequire("dhcg3");const sceneProperties={cancelExecution:!1,phase:0,executing:!1};let laserState,setLaserStates,setLaserStatesInterval,spikeTrapState,setSpikeTrapState,setSpikeTrapStateInterval;const editor=(0,$bsNDL.generateDefaultEditor)(document.getElementById("editorArea")),consoleElement=document.getElementById("consoleArea"),{renderer:renderer,scene:scene,camera:camera,controls:controls}=(0,$7FzN9.generateDefaultSceneObjects)(document.getElementById("phaseView")),gridMapHelper=new(0,$1M2iF.default),plane=gridMapHelper.createGridPlane(),actor=(0,$7FzN9.loadDefaultActor)();let objectives,walls,traps,laserFences,coletarCristal,resetLevel,winCondition;function changeLaserActiveStatus(e,o){gridMapHelper.lasers[e].active=o,0==o?laserFences[e].setNotVisible():"red"==gridMapHelper.lasers[e].state?(laserFences[e].setVisible(),laserFences[e].setRed()):(laserFences[e].setVisible(),laserFences[e].setBlue())}function changeLaserStateStatus(e,o){gridMapHelper.lasers.forEach((e=>{"multiColor"==e.type&&(e.state=o)})),"blue"==o?laserFences.forEach((e=>{"multiColor"==e.type&&e.setBlue()})):"red"==o&&laserFences.forEach((e=>{"multiColor"==e.type&&e.setRed()}))}function lasersVisualRestart(){for(let e=0;e<laserFences.length;e++)laserFences[e].active=!0}async function andarFrente(e){await(0,$7FzN9.translateActor)(actor,e,gridMapHelper,sceneProperties,consoleElement)}async function andarTras(e){await(0,$7FzN9.translateActor)(actor,-e,gridMapHelper,sceneProperties,consoleElement)}async function girarEsquerda(){await(0,$7FzN9.rotateActor)(actor,90,sceneProperties,1)}async function girarDireita(){await(0,$7FzN9.rotateActor)(actor,90,sceneProperties,-1)}async function darMeiaVolta(){await(0,$7FzN9.rotateActor)(actor,180,sceneProperties,1)}function laserAzulAtivo(){const e=new $4xklQ.Vector3;return actor.getObjectByName("interactionReference").getWorldPosition(e),null!=gridMapHelper.detectLaser(e,"blue")}function laserVermelhoAtivo(){const e=new $4xklQ.Vector3;return actor.getObjectByName("interactionReference").getWorldPosition(e),null!=gridMapHelper.detectLaser(e,"red")}function desativarLaserAzul(){const e=new $4xklQ.Vector3;actor.getObjectByName("interactionReference").getWorldPosition(e);let o=gridMapHelper.detectLaser(e,"blue");null!=o?changeLaserActiveStatus(o,!1):(consoleElement.innerText+="O robô entrou em curto circuito por tentar desativar um laser azul que não existe.\n",sceneProperties.cancelExecution=!0)}function desativarLaserVermelho(){const e=new $4xklQ.Vector3;actor.getObjectByName("interactionReference").getWorldPosition(e);let o=gridMapHelper.detectLaser(e,"red");null!=o?changeLaserActiveStatus(o,!1):(consoleElement.innerText+="O robô entrou em curto circuito por tentar desativar um laser vermelho que não existe.\n",sceneProperties.cancelExecution=!0)}function badLuck(e,o){const t=new $4xklQ.Vector3(gridMapHelper.getGlobalXPositionFromCoord(e[0]),0,gridMapHelper.getGlobalZPositionFromCoord(e[1]));let s="blue"==o?"red":"blue",a=gridMapHelper.detectLaser(t,o);null!=a&&("multiColor"==gridMapHelper.lasers[a].type?(gridMapHelper.lasers[a].state=s,"blue"==s?laserFences[a].setBlue():laserFences[a].setRed()):gridMapHelper.lasers[a].active?(gridMapHelper.lasers[a].active=!1,laserFences[a].setNotVisible()):(gridMapHelper.lasers[a].active=!0,laserFences[a].setVisible(),"blue"==gridMapHelper.lasers[a].state?laserFences[a].setBlue():laserFences[a].setRed()))}scene.add(plane),scene.add(actor);const phaseGeneration=[];function removeObjects(e,o,t,s){if(null!=e)for(let o=0;o<e.length;o++)scene.remove(e[o]);if(null!=o){for(let e=0;e<o.length;e++)scene.remove(o[e]);gridMapHelper.clearObstacles()}if(null!=t){for(let e=0;e<t.length;e++)scene.remove(t[e]);gridMapHelper.clearTraps()}if(null!=s){for(let e=0;e<s.length;e++)scene.remove(s[e]);gridMapHelper.clearLasers()}e=void 0,o=void 0,t=void 0,s=void 0}function animate(){renderer.render(scene,camera),controls.update(),requestAnimationFrame(animate)}phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText="Nível 3 - Fase 1 de 8",document.getElementById("phaseObjective").innerText="Faça o robô chegar ao cristal, após isso, o colete.",sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(1),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(5)),scene.add(objectives[0]),walls=[];const e=new $4xklQ.BoxGeometry(18,2,2),o=new $4xklQ.MeshLambertMaterial({color:"rgb(0,255,0)"});walls.push(new $4xklQ.Mesh(e,o)),walls.push(new $4xklQ.Mesh(e,o)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),scene.add(walls[0]),scene.add(walls[1]),gridMapHelper.addObstacle(1,9,4,4),gridMapHelper.addObstacle(1,9,6,6),laserFences=[],laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(5)),gridMapHelper.addLaser(7,5,laserFences[0]),scene.add(laserFences[0]),laserState=0,setLaserStates=()=>{changeLaserStateStatus(0,0==laserState?"blue":"red")},coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n"):consoleElement.innerText+="Robô não está em frente ao cristal.\n")},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0),objectives[0].visible=!0,gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!objectives[0].visible,setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText="Nível 3 - Fase 2 de 8",document.getElementById("phaseObjective").innerText="Faça o robô chegar ao cristal, após isso, o colete.",sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(2),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),0,gridMapHelper.getGlobalZPositionFromCoord(7)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),0,gridMapHelper.getGlobalZPositionFromCoord(3)),scene.add(objectives[0]),scene.add(objectives[1]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),0,gridMapHelper.getGlobalZPositionFromCoord(5)),gridMapHelper.addTrap(3,5,traps[0]),scene.add(traps[0]),(0,$dhcg3.trapsActivation)(traps),walls=[];const e=new $4xklQ.BoxGeometry(6,2,2),o=new $4xklQ.MeshLambertMaterial({color:"rgb(0,255,0)"});walls.push(new $4xklQ.Mesh(e,o)),walls.push(new $4xklQ.Mesh(e,o)),walls.push(new $4xklQ.Mesh(e,o)),walls.push(new $4xklQ.Mesh(e,o)),walls.push(new $4xklQ.Mesh(e,o)),walls.push(new $4xklQ.Mesh(e,o)),walls.push(new $4xklQ.Mesh(e,o)),walls.push(new $4xklQ.Mesh(e,o)),walls.push(new $4xklQ.Mesh(e,o)),walls.push(new $4xklQ.Mesh(e,o)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(3)),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(3)),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[2].rotateY(Math.PI/2),walls[3].rotateY(Math.PI/2),walls[6].rotateY(Math.PI/2),walls[7].rotateY(Math.PI/2),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),gridMapHelper.addObstacle(1,3,4,4),gridMapHelper.addObstacle(1,3,6,6),gridMapHelper.addObstacle(3,3,6,8),gridMapHelper.addObstacle(3,3,2,4),gridMapHelper.addObstacle(4,4,8,8),gridMapHelper.addObstacle(4,4,2,2),gridMapHelper.addObstacle(5,5,2,4),gridMapHelper.addObstacle(5,5,6,8),gridMapHelper.addObstacle(6,7,6,6),gridMapHelper.addObstacle(6,7,4,4),laserFences=[],laserFences.push(new(0,$j0YSa.default)("blue")),laserFences.push(new(0,$j0YSa.default)("red")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(4)),laserFences[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(6)),gridMapHelper.addLaser(4,4,laserFences[0]),gridMapHelper.addLaser(4,6,laserFences[1]),laserFences[0].rotateY(Math.PI/2),laserFences[1].rotateY(Math.PI/2),scene.add(laserFences[0]),scene.add(laserFences[1]),laserState=0,setLaserStates=()=>{0==laserState?(changeLaserActiveStatus(0,!0),changeLaserActiveStatus(1,!1)):(changeLaserActiveStatus(0,!1),changeLaserActiveStatus(1,!0))},coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+="Cristal coletado.\n"):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+="Cristal coletado.\n"):consoleElement.innerText+="Robô não está em frente ao cristal.\n",objectives[0].visible||objectives[1].visible||(consoleElement.innerText+="Todos os cristais coletados com sucesso!\n"))},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0),objectives[0].visible=!0,objectives[1].visible=!0,gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!objectives[0].visible&&!objectives[1].visible,setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText="Nível 3 - Fase 3 de 8",document.getElementById("phaseObjective").innerText="Faça o robô chegar ao cristal, após isso, o colete.",sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(2),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(3)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(6)),scene.add(objectives[0]),scene.add(objectives[1]),traps=[];new $4xklQ.BoxGeometry(2,1,2),new $4xklQ.MeshLambertMaterial({color:"rgb(255,0,0)"});traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),0,gridMapHelper.getGlobalZPositionFromCoord(2)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),0,gridMapHelper.getGlobalZPositionFromCoord(7)),traps[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),0,gridMapHelper.getGlobalZPositionFromCoord(4)),traps[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),0,gridMapHelper.getGlobalZPositionFromCoord(5)),traps[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(2)),traps[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(7)),gridMapHelper.addTrap(4,2,traps[0]),gridMapHelper.addTrap(4,7,traps[1]),gridMapHelper.addTrap(6,4,traps[2]),gridMapHelper.addTrap(6,5,traps[3]),gridMapHelper.addTrap(9,2,traps[4]),gridMapHelper.addTrap(9,7,traps[5]),scene.add(traps[0]),scene.add(traps[1]),scene.add(traps[2]),scene.add(traps[3]),scene.add(traps[4]),scene.add(traps[5]),walls=[];const e=new $4xklQ.BoxGeometry(10,2,2),o=new $4xklQ.BoxGeometry(12,2,2),t=new $4xklQ.BoxGeometry(4,2,2),s=new $4xklQ.BoxGeometry(6,2,2),a=new $4xklQ.BoxGeometry(2,2,2),r=new $4xklQ.MeshLambertMaterial({color:"rgb(0,255,0)"});walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(t,r)),walls.push(new $4xklQ.Mesh(t,r)),walls.push(new $4xklQ.Mesh(t,r)),walls.push(new $4xklQ.Mesh(s,r)),walls.push(new $4xklQ.Mesh(s,r)),walls.push(new $4xklQ.Mesh(a,r)),walls.push(new $4xklQ.Mesh(a,r)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(9)),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(0)),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(4.5)),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(4.5)),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(7.5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(7.5),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(5)),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[2].rotateY(Math.PI/2),walls[3].rotateY(Math.PI/2),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),gridMapHelper.addObstacle(3,7,9,9),gridMapHelper.addObstacle(3,7,0,0),gridMapHelper.addObstacle(3,3,2,7),gridMapHelper.addObstacle(5,5,4,5),gridMapHelper.addObstacle(5,5,7,7),gridMapHelper.addObstacle(5,5,2,2),gridMapHelper.addObstacle(7,8,7,7),gridMapHelper.addObstacle(7,8,2,2),gridMapHelper.addObstacle(7,9,4,4),gridMapHelper.addObstacle(7,9,5,5),laserFences=[],laserFences.push(new(0,$j0YSa.default)("red")),laserFences.push(new(0,$j0YSa.default)("blue")),laserFences.push(new(0,$j0YSa.default)("red")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences.push(new(0,$j0YSa.default)("blue")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(1)),laserFences[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(8)),laserFences[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(1)),laserFences[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(3)),laserFences[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(6)),laserFences[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(8)),gridMapHelper.addLaser(3,1,laserFences[0]),gridMapHelper.addLaser(3,8,laserFences[1]),gridMapHelper.addLaser(7,1,laserFences[2]),gridMapHelper.addLaser(7,3,laserFences[3]),gridMapHelper.addLaser(7,6,laserFences[4]),gridMapHelper.addLaser(7,8,laserFences[5]),scene.add(laserFences[0]),scene.add(laserFences[1]),scene.add(laserFences[2]),scene.add(laserFences[3]),scene.add(laserFences[4]),scene.add(laserFences[5]),laserState=0,setLaserStates=()=>{0==laserState?(changeLaserStateStatus(0,"blue"),changeLaserActiveStatus(0,!0),changeLaserActiveStatus(1,!0),changeLaserActiveStatus(2,!1),changeLaserActiveStatus(5,!1)):(changeLaserStateStatus(0,"red"),changeLaserActiveStatus(0,!1),changeLaserActiveStatus(1,!1),changeLaserActiveStatus(2,!0),changeLaserActiveStatus(5,!0))},coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+="Cristal coletado.\n"):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+="Cristal coletado.\n"):consoleElement.innerText+="Robô não está em frente ao cristal.\n",objectives[0].visible||objectives[1].visible||(consoleElement.innerText+="Todos os cristais coletados com sucesso!\n"))},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0),objectives[0].visible=!0,objectives[1].visible=!0,gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!objectives[0].visible&&!objectives[1].visible,setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText="Nível 3 - Fase 4 de 8",document.getElementById("phaseObjective").innerText="Faça o robô chegar ao cristal, após isso, o colete.",sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(1),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),0,gridMapHelper.getGlobalZPositionFromCoord(9)),scene.add(objectives[0]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(4)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),0,gridMapHelper.getGlobalZPositionFromCoord(5)),traps[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),0,gridMapHelper.getGlobalZPositionFromCoord(1)),traps[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),0,gridMapHelper.getGlobalZPositionFromCoord(5)),gridMapHelper.addTrap(0,4,traps[0]),gridMapHelper.addTrap(3,5,traps[1]),gridMapHelper.addTrap(5,1,traps[2]),gridMapHelper.addTrap(7,5,traps[3]),scene.add(traps[0]),scene.add(traps[1]),scene.add(traps[2]),scene.add(traps[3]),walls=[];const e=new $4xklQ.BoxGeometry(12,2,2),o=new $4xklQ.BoxGeometry(6,2,2),t=new $4xklQ.BoxGeometry(10,2,2),s=new $4xklQ.BoxGeometry(8,2,2),a=new $4xklQ.BoxGeometry(20,2,2),r=new $4xklQ.MeshLambertMaterial({color:"rgb(0,255,0)"});walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(t,r)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(s,r)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(s,r)),walls.push(new $4xklQ.Mesh(s,r)),walls.push(new $4xklQ.Mesh(a,r)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(2.5),1,gridMapHelper.getGlobalZPositionFromCoord(0)),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(3)),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(7.5)),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(3)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(2.5)),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(7.5)),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),1,gridMapHelper.getGlobalZPositionFromCoord(4.5)),gridMapHelper.addObstacle(0,5,0,0),gridMapHelper.addObstacle(1,1,4,8),gridMapHelper.addObstacle(1,3,2,2),gridMapHelper.addObstacle(3,3,2,4),gridMapHelper.addObstacle(3,3,6,9),gridMapHelper.addObstacle(5,5,2,4),gridMapHelper.addObstacle(5,5,6,8),gridMapHelper.addObstacle(7,7,1,4),gridMapHelper.addObstacle(7,7,6,9),gridMapHelper.addObstacle(9,9,0,9),walls[1].rotateY(Math.PI/2),walls[3].rotateY(Math.PI/2),walls[4].rotateY(Math.PI/2),walls[5].rotateY(Math.PI/2),walls[6].rotateY(Math.PI/2),walls[7].rotateY(Math.PI/2),walls[8].rotateY(Math.PI/2),walls[9].rotateY(Math.PI/2),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),laserFences=[],laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences.push(new(0,$j0YSa.default)("blue")),laserFences.push(new(0,$j0YSa.default)("red")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(5)),laserFences[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(7)),laserFences[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(9)),gridMapHelper.addLaser(5,5,laserFences[0]),gridMapHelper.addLaser(8,7,laserFences[1]),gridMapHelper.addLaser(5,9,laserFences[2]),laserFences[1].rotateY(Math.PI/2),scene.add(laserFences[0]),scene.add(laserFences[1]),scene.add(laserFences[2]),laserState=0,setLaserStates=()=>{0==laserState?(changeLaserStateStatus(0,"blue"),changeLaserActiveStatus(1,!0),changeLaserActiveStatus(2,!1)):(changeLaserStateStatus(0,"red"),changeLaserActiveStatus(1,!1),changeLaserActiveStatus(2,!0))},coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n"):consoleElement.innerText+="Robô não está em frente ao cristal.\n")},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0),objectives[0].visible=!0,gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!objectives[0].visible,setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText="Nível 3 - Fase 5 de 8",document.getElementById("phaseObjective").innerText="Faça o robô chegar ao cristal, após isso, o colete.",sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(2),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(0)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(7)),scene.add(objectives[0]),scene.add(objectives[1]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(6)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),0,gridMapHelper.getGlobalZPositionFromCoord(6)),gridMapHelper.addTrap(0,6,traps[0]),gridMapHelper.addTrap(3,6,traps[1]),scene.add(traps[0]),scene.add(traps[1]),walls=[];const e=new $4xklQ.BoxGeometry(6,2,2),o=new $4xklQ.BoxGeometry(14,2,2),t=new $4xklQ.BoxGeometry(2,2,2),s=(new $4xklQ.BoxGeometry(10,2,2),new $4xklQ.BoxGeometry(4,2,2)),a=new $4xklQ.BoxGeometry(12,2,2),r=new $4xklQ.MeshLambertMaterial({color:"rgb(0,255,0)"});walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(a,r)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(t,r)),walls.push(new $4xklQ.Mesh(a,r)),walls.push(new $4xklQ.Mesh(s,r)),walls.push(new $4xklQ.Mesh(s,r)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(t,r)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(5)),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(9)),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(4.5),1,gridMapHelper.getGlobalZPositionFromCoord(1)),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(3)),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(5.5),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(5.5),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(8.5),1,gridMapHelper.getGlobalZPositionFromCoord(9)),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),1,gridMapHelper.getGlobalZPositionFromCoord(3)),walls[10].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(2)),gridMapHelper.addObstacle(1,1,4,6),gridMapHelper.addObstacle(0,2,9,9),gridMapHelper.addObstacle(2,4,4,4),gridMapHelper.addObstacle(2,7,1,1),gridMapHelper.addObstacle(4,6,3,3),gridMapHelper.addObstacle(6,6,2,2),gridMapHelper.addObstacle(3,8,7,7),gridMapHelper.addObstacle(5,6,8,8),gridMapHelper.addObstacle(8,9,9,9),gridMapHelper.addObstacle(9,9,0,6),gridMapHelper.addObstacle(1,1,2,2),walls[0].rotateY(Math.PI/2),walls[9].rotateY(Math.PI/2),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),scene.add(walls[10]),laserFences=[],laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences.push(new(0,$j0YSa.default)("red")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences.push(new(0,$j0YSa.default)("blue")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(2)),laserFences[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(0)),laserFences[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(9)),laserFences[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(1)),laserFences[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(8)),gridMapHelper.addLaser(0,2,laserFences[0]),gridMapHelper.addLaser(2,0,laserFences[1]),gridMapHelper.addLaser(5,9,laserFences[2]),gridMapHelper.addLaser(8,1,laserFences[3]),gridMapHelper.addLaser(8,8,laserFences[4]),laserFences[0].rotateY(Math.PI/2),laserFences[3].rotateY(Math.PI/2),scene.add(laserFences[0]),scene.add(laserFences[1]),scene.add(laserFences[2]),scene.add(laserFences[3]),scene.add(laserFences[4]),laserState=0,setLaserStates=()=>{0==laserState?(changeLaserStateStatus(0,"blue"),changeLaserActiveStatus(2,!0),changeLaserActiveStatus(4,!1)):(changeLaserStateStatus(0,"red"),changeLaserActiveStatus(2,!1),changeLaserActiveStatus(4,!0))},coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+="Cristal coletado.\n"):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+="Cristal coletado.\n"):consoleElement.innerText+="Robô não está em frente ao cristal.\n",objectives[0].visible||objectives[1].visible||(consoleElement.innerText+="Todos os cristais coletados com sucesso!\n"))},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0),objectives[0].visible=!0,objectives[1].visible=!0,gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!objectives[0].visible&&!objectives[1].visible,setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText="Nível 3 - Fase 6 de 8",document.getElementById("phaseObjective").innerText="Faça o robô chegar ao cristal, após isso, o colete.",sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(2),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(9)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(0)),scene.add(objectives[0]),scene.add(objectives[1]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),0,gridMapHelper.getGlobalZPositionFromCoord(4)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),0,gridMapHelper.getGlobalZPositionFromCoord(5)),traps[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),0,gridMapHelper.getGlobalZPositionFromCoord(3)),traps[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),0,gridMapHelper.getGlobalZPositionFromCoord(7)),traps[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),0,gridMapHelper.getGlobalZPositionFromCoord(8)),gridMapHelper.addTrap(3,4,traps[0]),gridMapHelper.addTrap(7,5,traps[1]),gridMapHelper.addTrap(8,3,traps[2]),gridMapHelper.addTrap(1,7,traps[3]),gridMapHelper.addTrap(3,8,traps[4]),scene.add(traps[0]),scene.add(traps[1]),scene.add(traps[2]),scene.add(traps[3]),scene.add(traps[4]),walls=[];const e=new $4xklQ.BoxGeometry(10,2,2),o=new $4xklQ.BoxGeometry(2,2,2),t=new $4xklQ.BoxGeometry(4,2,2),s=new $4xklQ.BoxGeometry(6,2,2),a=new $4xklQ.BoxGeometry(12,2,2),r=new $4xklQ.BoxGeometry(14,2,2),l=new $4xklQ.MeshLambertMaterial({color:"rgb(0,255,0)"});walls.push(new $4xklQ.Mesh(e,l)),walls.push(new $4xklQ.Mesh(o,l)),walls.push(new $4xklQ.Mesh(t,l)),walls.push(new $4xklQ.Mesh(s,l)),walls.push(new $4xklQ.Mesh(a,l)),walls.push(new $4xklQ.Mesh(t,l)),walls.push(new $4xklQ.Mesh(t,l)),walls.push(new $4xklQ.Mesh(t,l)),walls.push(new $4xklQ.Mesh(o,l)),walls.push(new $4xklQ.Mesh(o,l)),walls.push(new $4xklQ.Mesh(r,l)),walls.push(new $4xklQ.Mesh(t,l)),walls.push(new $4xklQ.Mesh(t,l)),walls.push(new $4xklQ.Mesh(o,l)),walls.push(new $4xklQ.Mesh(o,l)),walls.push(new $4xklQ.Mesh(o,l)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(9)),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(1.5)),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(2.5),1,gridMapHelper.getGlobalZPositionFromCoord(0)),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(1.5),1,gridMapHelper.getGlobalZPositionFromCoord(5)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(3.5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(3.5),1,gridMapHelper.getGlobalZPositionFromCoord(3)),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[10].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(5)),walls[11].position.set(gridMapHelper.getGlobalXPositionFromCoord(8.5),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[12].position.set(gridMapHelper.getGlobalXPositionFromCoord(8.5),1,gridMapHelper.getGlobalZPositionFromCoord(1)),walls[13].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[14].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),1,gridMapHelper.getGlobalZPositionFromCoord(5)),walls[15].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(2)),gridMapHelper.addObstacle(0,4,9,9),gridMapHelper.addObstacle(0,0,8,8),gridMapHelper.addObstacle(0,0,1,2),gridMapHelper.addObstacle(1,1,1,3),gridMapHelper.addObstacle(0,5,0,0),gridMapHelper.addObstacle(1,2,5,5),gridMapHelper.addObstacle(3,4,6,6),gridMapHelper.addObstacle(3,4,3,3),gridMapHelper.addObstacle(5,5,2,2),gridMapHelper.addObstacle(5,5,7,7),gridMapHelper.addObstacle(6,6,2,8),gridMapHelper.addObstacle(8,9,8,8),gridMapHelper.addObstacle(8,8,7,7),gridMapHelper.addObstacle(8,9,1,1),gridMapHelper.addObstacle(8,8,2,2),gridMapHelper.addObstacle(9,9,5,5),walls[2].rotateY(Math.PI/2),walls[3].rotateY(Math.PI/2),walls[10].rotateY(Math.PI/2),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),scene.add(walls[10]),scene.add(walls[11]),scene.add(walls[12]),scene.add(walls[13]),scene.add(walls[14]),scene.add(walls[15]),laserFences=[],laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences.push(new(0,$j0YSa.default)("blue")),laserFences.push(new(0,$j0YSa.default)("blue")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(3)),laserFences[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(9)),laserFences[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(7)),laserFences[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(2)),laserFences[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(9)),laserFences[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(0)),gridMapHelper.addLaser(2,3,laserFences[0]),gridMapHelper.addLaser(6,9,laserFences[1]),gridMapHelper.addLaser(7,7,laserFences[2]),gridMapHelper.addLaser(7,2,laserFences[3]),gridMapHelper.addLaser(8,9,laserFences[4]),gridMapHelper.addLaser(8,0,laserFences[5]),laserFences[0].rotateY(Math.PI/2),laserFences[2].rotateY(Math.PI/2),laserFences[3].rotateY(Math.PI/2),scene.add(laserFences[0]),scene.add(laserFences[1]),scene.add(laserFences[2]),scene.add(laserFences[3]),scene.add(laserFences[4]),scene.add(laserFences[5]),laserState=0,setLaserStates=()=>{0==laserState?(changeLaserStateStatus(0,"blue"),changeLaserActiveStatus(2,!0),changeLaserActiveStatus(3,!1)):(changeLaserStateStatus(0,"red"),changeLaserActiveStatus(2,!1),changeLaserActiveStatus(3,!0))},coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+="Cristal coletado.\n"):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+="Cristal coletado.\n"):consoleElement.innerText+="Robô não está em frente ao cristal.\n",objectives[0].visible||objectives[1].visible||(consoleElement.innerText+="Todos os cristais coletados com sucesso!\n"))},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0),objectives[0].visible=!0,objectives[1].visible=!0,gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!objectives[0].visible&&!objectives[1].visible,setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText="Nível 3 - Fase 7 de 8",document.getElementById("phaseObjective").innerText="Faça o robô chegar ao cristal, após isso, o colete.",sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(2),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),0,gridMapHelper.getGlobalZPositionFromCoord(6)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),0,gridMapHelper.getGlobalZPositionFromCoord(5)),scene.add(objectives[0]),scene.add(objectives[1]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),0,gridMapHelper.getGlobalZPositionFromCoord(6)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),0,gridMapHelper.getGlobalZPositionFromCoord(5)),traps[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(2)),gridMapHelper.addTrap(1,6,traps[0]),gridMapHelper.addTrap(7,5,traps[1]),gridMapHelper.addTrap(9,2,traps[2]),scene.add(traps[0]),scene.add(traps[1]),scene.add(traps[2]),walls=[];const e=new $4xklQ.BoxGeometry(6,2,2),o=new $4xklQ.BoxGeometry(12,2,2),t=new $4xklQ.BoxGeometry(4,2,2),s=new $4xklQ.BoxGeometry(2,2,2),a=new $4xklQ.BoxGeometry(8,2,2),r=new $4xklQ.MeshLambertMaterial({color:"rgb(0,255,0)"});walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(t,r)),walls.push(new $4xklQ.Mesh(t,r)),walls.push(new $4xklQ.Mesh(t,r)),walls.push(new $4xklQ.Mesh(t,r)),walls.push(new $4xklQ.Mesh(s,r)),walls.push(new $4xklQ.Mesh(s,r)),walls.push(new $4xklQ.Mesh(a,r)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(5)),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(3)),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(1)),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(5.5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(7.5)),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(4.5)),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(8.5)),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(7.5)),walls[10].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[11].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[12].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(2.5)),gridMapHelper.addObstacle(1,1,1,3),gridMapHelper.addObstacle(1,1,7,9),gridMapHelper.addObstacle(1,1,7,9),gridMapHelper.addObstacle(1,1,7,9),gridMapHelper.addObstacle(1,1,7,9),gridMapHelper.addObstacle(3,8,6,6),gridMapHelper.addObstacle(4,4,7,8),gridMapHelper.addObstacle(5,5,4,5),gridMapHelper.addObstacle(6,6,8,9),gridMapHelper.addObstacle(8,8,7,8),gridMapHelper.addObstacle(3,3,8,8),gridMapHelper.addObstacle(8,8,4,4),gridMapHelper.addObstacle(7,7,1,4),walls[0].rotateY(Math.PI/2),walls[1].rotateY(Math.PI/2),walls[3].rotateY(Math.PI/2),walls[6].rotateY(Math.PI/2),walls[7].rotateY(Math.PI/2),walls[8].rotateY(Math.PI/2),walls[9].rotateY(Math.PI/2),walls[12].rotateY(Math.PI/2),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),scene.add(walls[10]),scene.add(walls[11]),scene.add(walls[12]),laserFences=[],laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences.push(new(0,$j0YSa.default)("blue")),laserFences.push(new(0,$j0YSa.default)("red")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(4)),laserFences[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(0)),laserFences[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(8)),laserFences[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(4)),laserFences[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(7)),gridMapHelper.addLaser(1,4,laserFences[0]),gridMapHelper.addLaser(1,0,laserFences[1]),gridMapHelper.addLaser(2,8,laserFences[2]),gridMapHelper.addLaser(4,4,laserFences[3]),gridMapHelper.addLaser(6,7,laserFences[4]),laserFences[2].rotateY(Math.PI/2),laserFences[3].rotateY(Math.PI/2),scene.add(laserFences[0]),scene.add(laserFences[1]),scene.add(laserFences[2]),scene.add(laserFences[3]),scene.add(laserFences[4]),laserState=0,setLaserStates=()=>{0==laserState?(changeLaserStateStatus(0,"blue"),changeLaserActiveStatus(2,!0),changeLaserActiveStatus(3,!1)):(changeLaserStateStatus(0,"red"),changeLaserActiveStatus(2,!1),changeLaserActiveStatus(3,!0))},coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+="Cristal coletado.\n"):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+="Cristal coletado.\n"):consoleElement.innerText+="Robô não está em frente ao cristal.\n",objectives[0].visible||objectives[1].visible||(consoleElement.innerText+="Todos os cristais coletados com sucesso!\n"))},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0),objectives[0].visible=!0,objectives[1].visible=!0,gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!objectives[0].visible&&!objectives[1].visible,setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText="Nível 3 - Fase 8 de 8",document.getElementById("phaseObjective").innerText="Faça o robô chegar ao cristal, após isso, o colete.",sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(3),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(0)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(1)),objectives[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(3)),scene.add(objectives[0]),scene.add(objectives[1]),scene.add(objectives[2]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(1)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),0,gridMapHelper.getGlobalZPositionFromCoord(3)),traps[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(2)),gridMapHelper.addTrap(0,1,traps[0]),gridMapHelper.addTrap(8,3,traps[1]),gridMapHelper.addTrap(9,2,traps[2]),scene.add(traps[0]),scene.add(traps[1]),scene.add(traps[2]),walls=[];const e=new $4xklQ.BoxGeometry(14,2,2),o=new $4xklQ.BoxGeometry(10,2,2),t=new $4xklQ.BoxGeometry(6,2,2),s=new $4xklQ.BoxGeometry(4,2,2),a=new $4xklQ.BoxGeometry(2,2,2),r=new $4xklQ.MeshLambertMaterial({color:"rgb(0,255,0)"});walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(t,r)),walls.push(new $4xklQ.Mesh(s,r)),walls.push(new $4xklQ.Mesh(s,r)),walls.push(new $4xklQ.Mesh(s,r)),walls.push(new $4xklQ.Mesh(a,r)),walls.push(new $4xklQ.Mesh(a,r)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(5)),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(5)),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(1)),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(8.5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(7.5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(7.5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(0)),gridMapHelper.addObstacle(1,1,2,8),gridMapHelper.addObstacle(3,3,3,9),gridMapHelper.addObstacle(5,5,2,8),gridMapHelper.addObstacle(1,5,1,1),gridMapHelper.addObstacle(6,8,8,8),gridMapHelper.addObstacle(8,9,6,6),gridMapHelper.addObstacle(7,8,4,4),gridMapHelper.addObstacle(7,8,2,2),gridMapHelper.addObstacle(6,6,6,6),gridMapHelper.addObstacle(7,7,0,0),walls[0].rotateY(Math.PI/2),walls[1].rotateY(Math.PI/2),walls[2].rotateY(Math.PI/2),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),laserFences=[],laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences.push(new(0,$j0YSa.default)("blue")),laserFences.push(new(0,$j0YSa.default)("blue")),laserFences.push(new(0,$j0YSa.default)("red")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(6)),laserFences[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(8)),laserFences[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(0)),laserFences[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(3)),laserFences[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(9)),laserFences[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(6)),laserFences[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(1)),gridMapHelper.addLaser(0,6,laserFences[0]),gridMapHelper.addLaser(2,8,laserFences[1]),gridMapHelper.addLaser(3,0,laserFences[2]),gridMapHelper.addLaser(4,3,laserFences[3]),gridMapHelper.addLaser(6,9,laserFences[4]),gridMapHelper.addLaser(7,6,laserFences[5]),gridMapHelper.addLaser(7,1,laserFences[6]),laserFences[0].rotateY(Math.PI/2),laserFences[1].rotateY(Math.PI/2),laserFences[3].rotateY(Math.PI/2),laserFences[5].rotateY(Math.PI/2),scene.add(laserFences[0]),scene.add(laserFences[1]),scene.add(laserFences[2]),scene.add(laserFences[3]),scene.add(laserFences[4]),scene.add(laserFences[5]),scene.add(laserFences[6]),laserState=0,setLaserStates=()=>{0==laserState?(changeLaserStateStatus(0,"blue"),changeLaserActiveStatus(2,!0),changeLaserActiveStatus(3,!1),changeLaserActiveStatus(4,!0)):(changeLaserStateStatus(0,"red"),changeLaserActiveStatus(2,!1),changeLaserActiveStatus(3,!0),changeLaserActiveStatus(4,!1))},coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+="Cristal coletado.\n"):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+="Cristal coletado.\n"):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[2],gridMapHelper)?(objectives[2].visible=!1,consoleElement.innerText+="Cristal coletado.\n"):consoleElement.innerText+="Robô não está em frente ao cristal.\n",objectives[0].visible||objectives[1].visible||objectives[2].visible||(consoleElement.innerText+="Todos os cristais coletados com sucesso!\n"))},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0),objectives[0].visible=!0,objectives[1].visible=!0,objectives[2].visible=!0,gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!(objectives[0].visible||objectives[1].visible||objectives[2].visible),setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3)})),window.addEventListener("resize",(()=>{(0,$7FzN9.resizeCanvasToDisplaySize)(renderer,camera)}));const execBtn=document.getElementById("execBtn");execBtn.addEventListener("click",(async function(){const codeParsed=(0,$kXIAH.default)(editor.state.doc.toString());console.log(codeParsed),sceneProperties.cancelExecution=!1,null!=traps&&(0,$dhcg3.trapsDeactivation)(traps),null!=codeParsed&&(resetLevel(),sceneProperties.executing=!0,this.disabled=!0,await eval(codeParsed),winCondition()?($bsNDL.readOnlyState.doc=editor.state.doc,editor.setState($bsNDL.readOnlyState),document.getElementById("winMessage").classList.remove("invisible"),document.getElementById("advanceBtn").classList.remove("invisible"),document.getElementById("resetBtn").disabled=!0):(sceneProperties.executing=!1,this.disabled=!1))}));const resetBtn=document.getElementById("resetBtn");resetBtn.addEventListener("click",(()=>{sceneProperties.cancelExecution=!0,resetLevel()}));const advanceBtn=document.getElementById("advanceBtn");advanceBtn.addEventListener("click",(e=>{sceneProperties.phase++,sceneProperties.phase<phaseGeneration.length?(setLaserStatesInterval&&(clearInterval(setLaserStatesInterval),setLaserStatesInterval=void 0),removeObjects(objectives,walls,traps,laserFences),phaseGeneration[sceneProperties.phase](),editor.setState($bsNDL.editState),consoleElement.innerText=null,document.getElementById("winMessage").classList.add("invisible"),document.getElementById("advanceBtn").classList.add("invisible"),execBtn.disabled=!1,resetBtn.disabled=!1):(sceneProperties.phase=sceneProperties.phase>phaseGeneration.length?phaseGeneration.length:sceneProperties.phase,window.location.href="../")})),(0,$7FzN9.resizeCanvasToDisplaySize)(renderer,camera),phaseGeneration[sceneProperties.phase](),animate()})),parcelRequire.register("kXIAH",(function(e,o){$parcel$export(e.exports,"default",(()=>c));const t=[{filter:new RegExp("^andarFrente(\\s+)?\\((\\s+)?\\d+(\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^andarTras(\\s+)?\\((\\s+)?\\d+(\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^girarEsquerda(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^girarDireita(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^darMeiaVolta(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^coletarCristal(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"normal"},{filter:new RegExp("^desativarLaserAzul(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"mustCondition"},{filter:new RegExp("^desativarLaserVermelho(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"mustCondition"},{filter:new RegExp("^se(\\s+)?\\((\\s+)?.+\\)$"),type:"conditional"},{filter:new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?{$"),type:"conditional&&blockValidation"},{filter:new RegExp("^senão$"),type:"elseValidation"},{filter:new RegExp("^senão(\\s+)?{$"),type:"elseValidation&&blockValidation"},{filter:new RegExp("^}$"),type:"closeBlockValidation"},{filter:new RegExp("^{$"),type:"blockValidation"}],s=[new RegExp("true"),new RegExp("false"),new RegExp("^laserAzulAtivo(\\s+)?\\((\\s+)?\\)(\\s+)?$"),new RegExp("^laserVermelhoAtivo(\\s+)?\\((\\s+)?\\)(\\s+)?$")];function a(e){let o=e.trim(),t=e.substring(o.indexOf("(")+1,o.lastIndexOf(")"));for(let e=0;e<s.length;e++)if(s[e].test(t.trim()))return!0;return!1}function r(e,o){let t=!1,s=0;for(let a=o+1;a<e.length;a++)if(e[a].includes("}")){if(0==s){t=!0;break}s--}else{if(!e[a].includes("{"))continue;s++}return t}function l(e,o){let t=!1;for(let s=o-1;s>=0;s--)if(e[s].includes("{")){t=!0;break}return t}function i(e,o){let t=!1,s=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?(\\s+)?$"),a=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)$"),r=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?{[^}]*?$"),l=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?{$"),i=new RegExp("^senão$"),n=new RegExp("^senão(\\s+)?{$"),p=new RegExp("^senão(\\s+)?.+(\\s+)?$"),d=new RegExp("^senão(\\s+)?{[^]*?$"),c=null;for(let t=o-1;t>=0;t--)if(a.test(e[t].trim())||l.test(e[t].trim())||i.test(e[t].trim())||n.test(e[t].trim())){c=t;break}if(null!=c){let a="";for(let t=c;t<o;t++)a+=`${e[t].trim()}\n`;return s.test(a.trim())||r.test(a.trim())||p.test(a.trim())||d.test(a.trim())?(t=!0,t):t}return t}function n(e,o){let t=!1,s=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?.+(\\s+)?$"),a=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)$"),r=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?{[^]*?}$"),l=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?{$"),i=null;for(let t=o-1;t>=0;t--)if(a.test(e[t].trim())||l.test(e[t].trim())){i=t;break}if(null!=i){let a="";for(let t=i;t<o;t++)a+=`${e[t].trim()}\n`;return s.test(a.trim())||r.test(a.trim())?(t=!0,t):t}return t}function p(e,o){const t=[new RegExp("^andarFrente(\\s+)?\\((\\s+)?\\d+(\\s+)?\\)(\\s+)?(;)?$"),new RegExp("^andarTras(\\s+)?\\((\\s+)?\\d+(\\s+)?\\)(\\s+)?(;)?$"),new RegExp("^girarEsquerda(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),new RegExp("^girarDireita(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),new RegExp("^darMeiaVolta(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$")];let s=[0,5],a=0,r="+",l=0;function i(e){return[{axis:0,value:"+"},{axis:1,value:"+"},{axis:0,value:"-"},{axis:1,value:"-"}][e]}function n(e){return e>3?0:e<0?3:e}for(let p=0;p<o;p++)if(t[0].test(e[p])){let o=parseInt(e[p].substring(e[p].indexOf("(")+1,e[p].indexOf(")")));"+"==r?s[a]+=o:s[a]-=o}else if(t[1].test(e[p])){let o=parseInt(e[p].substring(e[p].indexOf("(")+1,e[p].indexOf(")")));"-"==r?s[a]+=o:s[a]-=o}else if(t[2].test(e[p])){l--,l=n(l);const e=i(l);a=e.axis,r=e.value}else if(t[3].test(e[p])){l++,l=n(l);const e=i(l);a=e.axis,r=e.value}else{if(!t[4].test(e[p]))continue;{l--,l=n(l),l--,l=n(l);const e=i(l);a=e.axis,r=e.value}}return"+"==r?s[a]++:s[a]--,s}function d(e,o){document.getElementById("consoleArea").innerText+=`Código inválido: ${e} linha: ${o}\n`}function c(e,o=0){let s="async function runCode(){\n",c="\n",g=e.split("\n"),b=!0,M=0;for(let e=0;e<g.length;e++){let m,F=!1;if(""!=g[e].trim()){for(let o=0;o<t.length;o++)if(F=t[o].filter.test(g[e].trim()),F){m=t[o].type;break}if(!F){d(g[e],e+1),b=!1;break}if("sequential"===m){s+=`await ${g[e].trim()}\n`,M++}else if("conditional&&blockValidation"===m){let o=!1;if(r(g,e)?a(g[e])?o=!0:d(`${g[e]} (Condição inválida)`,e+1):d(`${g[e]} (Bloco é aberto mas nunca é fechado)`,e+1),!o){b=!1;break}{let o=g[e].trim();s+=`if${o.substring(o.indexOf("("))}\n`,M++}}else if("conditional"===m){if(!a(g[e])){d(`${g[e]} (Condição inválida)`,e+1),b=!1;break}{let o=g[e].trim();s+=`if${o.substring(o.indexOf("("))}\n`,M++}}else if("elseValidation"===m){if(!n(g,e)){d(`${g[e]} (Condição inválida)`,e+1),b=!1;break}s+="else\n",M++}else if("elseValidation&&blockValidation"===m){let o=!1;if(r(g,e)?n(g,e)?o=!0:d(`${g[e]} (Condição inválida)`,e+1):d(`${g[e]} (Bloco é aberto mas nunca é fechado)`,e+1),!o){b=!1;break}s+="else{\n",M++}else if("blockValidation"===m){if(!r(g,e)){d(`${g[e]} (Bloco é aberto mas nunca é fechado)`,e+1),b=!1;break}s+=`${g[e].trim()}\n`,M++}else if("closeBlockValidation"===m){if(!l(g,e)){d(`${g[e]} (Bloco é fechado mas nunca é aberto)`,e+1),b=!1;break}s+=`${g[e].trim()}\n`,M++}else if("mustCondition"===m)if(i(g,e)){s+=`${g[e].trim()}\n`,M++}else{let o=t[6].filter.test(g[e].trim())?"blue":"red",a=p(g,e);c+=`badLuck([${a[0]},${a[1]}],'${o}')\n`,s+=`${g[e].trim()}\n`,M++}else{s+=`${g[e].trim()}\n`,M++}if(o>0&&M>o){document.getElementById("consoleArea").innerText+=`Aviso: O código tem mais linhas do que o robô pode processar. Tente rescrever seu código em ${o} linhas ou menos.\n`,b=!1;break}}}return b?(s+=`}${c}runCode()\n`,s):null}})),parcelRequire.register("j0YSa",(function(e,o){$parcel$export(e.exports,"default",(()=>n));var t=parcelRequire("4xklQ");parcelRequire("acMZl");class s extends t.Mesh{constructor(){super(new t.BoxGeometry(.5,2,.15),new t.MeshPhongMaterial({color:"white"}))}}class a extends t.Mesh{constructor(){super(new t.TorusGeometry(.15,.05,10,20),new t.MeshPhongMaterial({color:"black"}))}}class r extends t.Mesh{constructor(){super(new t.BoxGeometry(.5,2,.1),new t.MeshPhongMaterial({color:"white"}))}}class l extends t.Mesh{constructor(e){super(new t.CylinderGeometry(.1,.1,2,64,64),new t.MeshPhongMaterial({emissive:e,color:e,emissiveIntensity:1,transparent:!0,opacity:.7}))}}class i extends t.Object3D{constructor(e){super(),this.index=0,this.x=0,this.z=0,this.state=e,this.active=!0,this.type=e;let o=new r;o.rotateX(-Math.PI/2),o.position.set(0,-.95,0);let t=new s;t.position.set(0,0,-.93);let i=new s;i.position.set(0,0,.93);let n=new a;n.position.set(0,.6,.85);let p=new a;p.position.set(0,.6,-.85);let d=new a;d.position.set(0,0,.85);let c=new a;c.position.set(0,0,-.85);let g=new a;g.position.set(0,-.6,.85);let b=new a;b.position.set(0,-.6,-.85);let M=new l("blue");M.rotateX(-Math.PI/2),M.position.set(0,.6,0);let m=new l("blue");m.rotateX(-Math.PI/2),m.position.set(0,0,0);let F=new l("blue");F.rotateX(-Math.PI/2),F.position.set(0,-.6,0),this.blueLasers=[M,m,F];let u=new l("red");u.rotateX(-Math.PI/2),u.position.set(0,.6,0);let w=new l("red");w.rotateX(-Math.PI/2),w.position.set(0,0,0);let h=new l("red");return h.rotateX(-Math.PI/2),h.position.set(0,-.6,0),this.redLasers=[u,w,h],"blue"==e?(this.blueLasers.forEach((e=>e.visible=!0)),this.redLasers.forEach((e=>e.visible=!1)),this.state="blue"):"red"!=e&&"multiColor"!=e||(this.blueLasers.forEach((e=>e.visible=!1)),this.state="red"),this.add(o),this.add(t),this.add(i),this.add(n),this.add(p),this.add(d),this.add(c),this.add(g),this.add(b),this.add(M),this.add(m),this.add(F),this.add(u),this.add(w),this.add(h),this}setVisible(){this.active=!0}setNotVisible(){this.blueLasers.forEach((e=>e.visible=!1)),this.redLasers.forEach((e=>e.visible=!1)),this.active=!1}setBlue(){1==this.active&&(this.blueLasers.forEach((e=>e.visible=!0)),this.redLasers.forEach((e=>e.visible=!1)),this.state="blue")}setRed(){1==this.active&&(this.blueLasers.forEach((e=>e.visible=!1)),this.redLasers.forEach((e=>e.visible=!0)),this.state="red")}}var n=i})),parcelRequire("3YhQm");