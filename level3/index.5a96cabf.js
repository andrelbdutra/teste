var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},o={},n={},r=t.parcelRequiredf3e;null==r&&((r=function(t){if(t in o)return o[t].exports;if(t in n){var r=n[t];delete n[t];var e={id:t,exports:{}};return o[t]=e,r.call(e.exports,e,e.exports),e.exports}var i=new Error("Cannot find module '"+t+"'");throw i.code="MODULE_NOT_FOUND",i}).register=function(t,o){n[t]=o},t.parcelRequiredf3e=r),r.register("acMZl",(function(t,o){var n,e,i,s;n=t.exports,e="CSG",i=()=>a,Object.defineProperty(n,e,{get:i,set:s,enumerable:!0,configurable:!0});var l=r("4xklQ"),a=function(){function t(){this.polygons=[]}return t.prototype.clone=function(){var o=new t;return o.polygons=this.polygons.map((function(t){return t.clone()})),o},t.prototype.toPolygons=function(){return this.polygons},t.prototype.union=function(o){var n=new v(this.clone().polygons),r=new v(o.clone().polygons);return n.clipTo(r),r.clipTo(n),r.invert(),r.clipTo(n),r.invert(),n.build(r.allPolygons()),t.fromPolygons(n.allPolygons())},t.prototype.subtract=function(o){var n=new v(this.clone().polygons),r=new v(o.clone().polygons);return n.invert(),n.clipTo(r),r.clipTo(n),r.invert(),r.clipTo(n),r.invert(),n.build(r.allPolygons()),n.invert(),t.fromPolygons(n.allPolygons())},t.prototype.intersect=function(o){var n=new v(this.clone().polygons),r=new v(o.clone().polygons);return n.invert(),r.clipTo(n),r.invert(),n.clipTo(r),r.clipTo(n),n.build(r.allPolygons()),n.invert(),t.fromPolygons(n.allPolygons())},t.prototype.inverse=function(){var t=this.clone();return t.polygons.map((function(t){t.flip()})),t},t.fromPolygons=function(o){var n=new t;return n.polygons=o,n},t.fromGeometry=function(o,n){var r,e=[],i=o.attributes.position,s=o.attributes.normal,l=o.attributes.uv,a=o.attributes.color;if(o.index)r=o.index.array;else{r=new Array(i.array.length/i.itemSize|0);for(var p=0;p<r.length;p++)r[p]=p}var h=r.length/3|0;e=new Array(h);p=0;for(var c=0,y=r.length;p<y;p+=3,c++){for(var v=new Array(3),g=0;g<3;g++){var w=r[p+g],d=3*w,m=2*w,b=i.array[d],x=i.array[d+1],P=i.array[d+2],z=s.array[d],k=s.array[d+1],M=s.array[d+2],T=l.array[m],A=l.array[m+1];v[g]=new u({x:b,y:x,z:P},{x:z,y:k,z:M},{x:T,y:A,z:0},a&&{x:a.array[m],y:a.array[m+1],z:a.array[m+2]})}e[c]=new f(v,n)}return t.fromPolygons(e)},t.ttvv0=new l.Vector3,t.tmpm3=new l.Matrix3,t.fromMesh=function(o,n){var r=t.fromGeometry(o.geometry,n);t.tmpm3.getNormalMatrix(o.matrix);for(var e=0;e<r.polygons.length;e++)for(var i=r.polygons[e],s=0;s<i.vertices.length;s++){var a=i.vertices[s];a.pos.copy(t.ttvv0.copy(new l.Vector3(a.pos.x,a.pos.y,a.pos.z)).applyMatrix4(o.matrix)),a.normal.copy(t.ttvv0.copy(new l.Vector3(a.normal.x,a.normal.y,a.normal.z)).applyMatrix3(t.tmpm3))}return r},t.nbuf3=function(t){return{top:0,array:new Float32Array(t),write:function(t){this.array[this.top++]=t.x,this.array[this.top++]=t.y,this.array[this.top++]=t.z}}},t.nbuf2=function(t){return{top:0,array:new Float32Array(t),write:function(t){this.array[this.top++]=t.x,this.array[this.top++]=t.y}}},t.toMesh=function(o,n,r){var e,i=o.polygons,s=0;i.forEach((function(t){return s+=t.vertices.length-2})),e=new l.BufferGeometry;var a,p=t.nbuf3(9*s),h=t.nbuf3(9*s),c=t.nbuf2(6*s),u=[];if(i.forEach((function(o){var n=o.vertices,r=n.length;void 0!==o.shared&&(u[o.shared]||(u[o.shared]=[])),r&&void 0!==n[0].color&&(a||(a=t.nbuf3(9*s)));for(var e=3;e<=r;e++)void 0!==o.shared&&u[o.shared].push(p.top/3,p.top/3+1,p.top/3+2),p.write(n[0].pos),p.write(n[e-2].pos),p.write(n[e-1].pos),h.write(n[0].normal),h.write(n[e-2].normal),h.write(n[e-1].normal),c.write(n[0].uv),c.write(n[e-2].uv),c.write(n[e-1].uv),a&&(a.write(n[0].color)||a.write(n[e-2].color)||a.write(n[e-1].color))})),e.setAttribute("position",new l.BufferAttribute(p.array,3)),e.setAttribute("normal",new l.BufferAttribute(h.array,3)),e.setAttribute("uv",new l.BufferAttribute(c.array,2)),a&&e.setAttribute("color",new l.BufferAttribute(a.array,3)),u.length){for(var y=[],f=0,v=0;v<u.length;v++)e.addGroup(f,u[v].length,v),f+=u[v].length,y=y.concat(u[v]);e.setIndex(y)}var g=(new l.Matrix4).copy(n).invert();e.applyMatrix4(g),e.computeBoundingSphere(),e.computeBoundingBox();var w=new l.Mesh(e,r);return w.matrix.copy(n),w.matrix.decompose(w.position,w.quaternion,w.scale),w.rotation.setFromQuaternion(w.quaternion),w.updateMatrixWorld(),w.castShadow=w.receiveShadow=!0,w},t}(),p=function(){function t(t,o,n){void 0===t&&(t=0),void 0===o&&(o=0),void 0===n&&(n=0),this.x=t,this.y=o,this.z=n}return t.prototype.copy=function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},t.prototype.clone=function(){return new t(this.x,this.y,this.z)},t.prototype.negate=function(){return this.x*=-1,this.y*=-1,this.z*=-1,this},t.prototype.add=function(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this},t.prototype.sub=function(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this},t.prototype.times=function(t){return this.x*=t,this.y*=t,this.z*=t,this},t.prototype.dividedBy=function(t){return this.x/=t,this.y/=t,this.z/=t,this},t.prototype.lerp=function(t,o){return this.add(h.copy(t).sub(this).times(o))},t.prototype.unit=function(){return this.dividedBy(this.length())},t.prototype.length=function(){return Math.sqrt(Math.pow(this.x,2)+Math.pow(this.y,2)+Math.pow(this.z,2))},t.prototype.normalize=function(){return this.unit()},t.prototype.cross=function(t){var o=this,n=o.x,r=o.y,e=o.z,i=t.x,s=t.y,l=t.z;return this.x=r*l-e*s,this.y=e*i-n*l,this.z=n*s-r*i,this},t.prototype.dot=function(t){return this.x*t.x+this.y*t.y+this.z*t.z},t}(),h=new p(0,0,0),c=new p(0,0,0),u=function(){function t(t,o,n,r){this.pos=(new p).copy(t),this.normal=(new p).copy(o),this.uv=(new p).copy(n),this.uv.z=0,r&&(this.color=(new p).copy(r))}return t.prototype.clone=function(){return new t(this.pos,this.normal,this.uv,this.color)},t.prototype.flip=function(){this.normal.negate()},t.prototype.interpolate=function(o,n){return new t(this.pos.clone().lerp(o.pos,n),this.normal.clone().lerp(o.normal,n),this.uv.clone().lerp(o.uv,n),this.color&&o.color&&this.color.clone().lerp(o.color,n))},t}(),y=function(){function t(t,o){this.normal=t,this.w=o}return t.prototype.clone=function(){return new t(this.normal.clone(),this.w)},t.prototype.flip=function(){this.normal.negate(),this.w=-this.w},t.prototype.splitPolygon=function(o,n,r,e,i){for(var s=0,l=[],a=0;a<o.vertices.length;a++){var p=(m=this.normal.dot(o.vertices[a].pos)-this.w)<-t.EPSILON?2:m>t.EPSILON?1:0;s|=p,l.push(p)}switch(s){case 0:(this.normal.dot(o.plane.normal)>0?n:r).push(o);break;case 1:e.push(o);break;case 2:i.push(o);break;case 3:var c=[],u=[];for(a=0;a<o.vertices.length;a++){var y=(a+1)%o.vertices.length,v=l[a],g=l[y],w=o.vertices[a],d=o.vertices[y];if(2!=v&&c.push(w),1!=v&&u.push(2!=v?w.clone():w),3==(v|g)){var m=(this.w-this.normal.dot(w.pos))/this.normal.dot(h.copy(d.pos).sub(w.pos)),b=w.interpolate(d,m);c.push(b),u.push(b.clone())}}c.length>=3&&e.push(new f(c,o.shared)),u.length>=3&&i.push(new f(u,o.shared))}},t.EPSILON=1e-5,t.fromPoints=function(o,n,r){var e=h.copy(n).sub(o).cross(c.copy(r).sub(o)).normalize();return new t(e.clone(),e.dot(o))},t}(),f=function(){function t(t,o){this.vertices=t,this.shared=o,this.plane=y.fromPoints(t[0].pos,t[1].pos,t[2].pos)}return t.prototype.clone=function(){return new t(this.vertices.map((function(t){return t.clone()})),this.shared)},t.prototype.flip=function(){this.vertices.reverse().map((function(t){return t.flip()})),this.plane.flip()},t}(),v=function(){function t(t){this.polygons=[],t&&this.build(t)}return t.prototype.clone=function(){var o=new t;return o.plane=this.plane&&this.plane.clone(),o.front=this.front&&this.front.clone(),o.back=this.back&&this.back.clone(),o.polygons=this.polygons.map((function(t){return t.clone()})),o},t.prototype.invert=function(){for(var t=0;t<this.polygons.length;t++)this.polygons[t].flip();this.plane&&this.plane.flip(),this.front&&this.front.invert(),this.back&&this.back.invert();var o=this.front;this.front=this.back,this.back=o},t.prototype.clipPolygons=function(t){if(!this.plane)return t.slice();for(var o=[],n=[],r=0;r<t.length;r++)this.plane.splitPolygon(t[r],o,n,o,n);return this.front&&(o=this.front.clipPolygons(o)),n=this.back?this.back.clipPolygons(n):[],o.concat(n)},t.prototype.clipTo=function(t){this.polygons=t.clipPolygons(this.polygons),this.front&&this.front.clipTo(t),this.back&&this.back.clipTo(t)},t.prototype.allPolygons=function(){var t=this.polygons.slice();return this.front&&(t=t.concat(this.front.allPolygons())),this.back&&(t=t.concat(this.back.allPolygons())),t},t.prototype.build=function(o){if(o.length){this.plane||(this.plane=o[0].plane.clone());for(var n=[],r=[],e=0;e<o.length;e++)this.plane.splitPolygon(o[e],this.polygons,this.polygons,n,r);n.length&&(this.front||(this.front=new t),this.front.build(n)),r.length&&(this.back||(this.back=new t),this.back.build(r))}},t.fromJSON=function(t){return a.fromPolygons(t.polygons.map((function(t){return new f(t.vertices.map((function(t){return new u(t.pos,t.normal,t.uv)})),t.shared)})))},t}()}));